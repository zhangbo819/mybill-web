{"version":3,"sources":["components/Bill/index.js","components/Entering/index.js","pages/InputBill.js","App.js","reportWebVitals.js","index.js"],"names":["confirm","Modal","Bill","props","update","data","_getData","setState","getMax","state","reduce","r","i","money","split","eval","err","console","log","handleCopy","input","document","createElement","value","map","reverse","join","body","appendChild","select","execCommand","removeChild","message","success","duration","maxCount","rtl","content","onClick","setTimeout","destroy","clearAll","title","icon","maskClosable","onOk","Promise","resolve","localStorage","setItem","storeKey","handleItem","item","index","splice","JSON","stringify","renderHeader","isShowSetting","className","gutter","align","justify","type","disabled","length","style","margin","padding","span","renderItem","date","details","num","Item","bind","this","getItem","parse","size","header","footer","dataSource","rowKey","React","PureComponent","Entering","handleInput","key","e","target","onPressEnter","refDetails","current","focus","handleDatePickerChange","s","Date","format","now","handleSubmit","error","refNum","Array","isArray","push","getMonth","getDate","createRef","marginTop","moment","onChange","marginBottom","ref","autoFocus","TabPane","Tabs","InputBill","activeKey","refBill","defaultActiveKey","centered","App","tabs","renderComp","AppOutline","enderComp","useState","setActiveKey","display","position","width","bottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.124a7894.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Col, List, message, Modal, Row, Statistic } from 'antd';\nimport { ExclamationCircleOutlined, SettingOutlined } from '@ant-design/icons';\n\nconst { confirm } = Modal;\n\n\nexport default class Bill extends React.PureComponent {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            data: [],\n            isShowSetting: true\n        }\n    }\n\n    componentDidMount() {\n        this.update()\n    }\n\n    _getData() {\n        let data = localStorage.getItem(this.props.storeKey)\n\n        try {\n            data = JSON.parse(data).reverse()\n        } catch {\n            data = []\n        }\n        return data\n    }\n\n    update = () => {\n        const data = this._getData()\n\n        this.setState({ data })\n    }\n\n    getMax = () => {\n        return this.state.data.reduce((r, i) => {\n            const money = i.split('@')[2]\n            try {\n                r += eval(money)\n            } catch (err) {\n                console.log(err, i)\n                r += 0\n            }\n            return r\n        }, 0)\n    }\n\n    handleCopy = () => {\n        const input = document.createElement(\"input\"); // 直接构建input\n        input.value = this._getData().map(i => `\"${i}\"`).reverse().join(','); // 设置内容\n        document.body.appendChild(input); // 添加临时实例\n        input.select(); // 选择实例内容\n        document.execCommand(\"Copy\"); // 执行复制\n        document.body.removeChild(input); // 删除临时实例\n\n        message.success({\n            // top: 500,\n            duration: 2,\n            maxCount: 3,\n            rtl: true,\n            content: '复制成功',\n            onClick: () => setTimeout(() => message.destroy())\n        });\n    }\n\n    clearAll = () => {\n        confirm({\n            title: '确定要清空吗?',\n            icon: <ExclamationCircleOutlined />,\n            content: '清空后将无法恢复',\n            maskClosable: true,\n            onOk: () => {\n                return new Promise((resolve) => {\n                    localStorage.setItem(this.props.storeKey, '')\n                    this.setState({ data: [] })\n                    resolve()\n                })\n            }\n        });\n    }\n\n    handleItem = (item, index) => {\n        // console.log('item, index', item, index)\n        confirm({\n            title: '您要删除该条数据吗?',\n            icon: <ExclamationCircleOutlined />,\n            content: '清空后将无法恢复',\n            maskClosable: true,\n            onOk: () => {\n                return new Promise((resolve) => {\n                    const { data } = this.state\n                    data.splice(index, 1)\n                    localStorage.setItem(this.props.storeKey, JSON.stringify(data))\n                    this.setState({ data: [...data] })\n                    resolve()\n                })\n            }\n        });\n    }\n\n    renderHeader = () => {\n        const { data, isShowSetting } = this.state\n        return <header>\n            {isShowSetting ?\n                <SettingOutlined className=\"Setting\" onClick={() => this.setState({ isShowSetting: !this.state.isShowSetting })} /> :\n                <Row gutter={24} align=\"middle\" justify=\"space-around\">\n                    <Col>\n                        <Button type=\"primary\" onClick={this.clearAll} disabled={data.length === 0}>全部清空</Button>\n                    </Col>\n                    <Col>\n                        <Button type=\"primary\" onClick={this.handleCopy} disabled={data.length === 0}>复制</Button>\n                    </Col>\n                </Row>}\n\n            {data.length !== 0 && <Row gutter={24} style={{ margin: '24px 0 0 0', padding: '0 24px' }}>\n                <Col style={{ padding: 0 }} span={8}><h3>日期</h3></Col>\n                <Col style={{ padding: 0 }} span={8}><h3>详情</h3></Col>\n                <Col style={{ padding: 0 }} span={8}><h3>金额</h3></Col>\n            </Row>}\n        </header>\n    }\n\n    renderItem = (item, index) => {\n        const [date, details, num] = item.split('@')\n        return <List.Item onClick={this.handleItem.bind(this, item, index)}>\n            {/* <Row gutter={24} align=\"middle\"> */}\n            <Col span={8}>{date}</Col>\n            <Col span={8}>{details}</Col>\n            <Col span={8}>{num}</Col>\n            {/* </Row> */}\n        </List.Item>\n    }\n\n    render() {\n        const { data } = this.state\n        return <div>\n            <List\n                size=\"large\"\n                header={this.renderHeader()}\n                footer={<div style={{ margin: '0 24px' }}><Statistic title=\"总记\" value={this.getMax()} /></div>}\n                // bordered\n                dataSource={data}\n                rowKey={item => item}\n                renderItem={this.renderItem}\n            />\n        </div>\n    }\n}","import React from 'react'\nimport { message, Button, Input, Col, Row, DatePicker, InputNumber } from 'antd';\nimport { CarryOutOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\n\nexport default class Entering extends React.PureComponent {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            date: new Date(),\n            details: '',\n            num: '',\n        }\n        this.refDetails = React.createRef()\n        this.refNum = React.createRef()\n    }\n\n    handleInput = key => e => {\n        this.setState({ [key]: typeof e === 'object' ? e.target.value : e })\n    }\n\n    onPressEnter = () => {\n        // console.log(this.refNum.current)\n        this.refDetails.current.focus()\n    }\n\n    handleDatePickerChange = (e, s) => {\n        // console.log(e.format(), s)\n        this.setState({ date: new Date(e ? e.format() : Date.now()) })\n    }\n\n    handleSubmit = () => {\n        const { date, details, num } = this.state\n\n        console.log(date, details, num)\n\n        if (details === '' || num === '') {\n            message.error('请输入')\n            if (details === '') {\n                this.refDetails.current.focus()\n            } else if (num === '') {\n                this.refNum.current.focus()\n            }\n            return\n        }\n\n        let data = localStorage.getItem(this.props.storeKey)\n\n        try {\n            data = JSON.parse(data)\n        } catch {\n            data = []\n        }\n\n        if (!Array.isArray(data)) {\n            data = []\n        }\n\n        // console.log('data', data)\n\n        data.push(`${date.getMonth() + 1}.${date.getDate()}@${details}@${num}`)\n\n        localStorage.setItem(this.props.storeKey, JSON.stringify(data))\n\n        message.success({\n            // top: 500,\n            duration: 2,\n            maxCount: 3,\n            rtl: true,\n            content: '录入成功',\n            onClick: () => setTimeout(() => message.destroy())\n        });\n\n        this.setState({\n            details: '',\n            num: ''\n        })\n        this.refDetails.current.focus()\n    }\n\n    render() {\n        const { date, details, num } = this.state\n        return <div className=\"Entering\">\n            <Row gutter={24} style={{ marginTop: '12px' }} align=\"middle\">\n                <Col span={8}>\n                    {/* <CarryOutOutlined /> */}\n                    <h3>日期</h3>\n                </Col>\n                <Col span={16}>\n                    <DatePicker value={moment(date)} onChange={this.handleDatePickerChange} />\n                </Col>\n            </Row>\n\n            <Row gutter={24} style={{ marginTop: '24px', marginBottom: '24px' }} align=\"middle\">\n                <Col span={8}>\n                    <h3>金额</h3>\n                </Col>\n                <Col span={16}>\n                    <InputNumber ref={this.refNum} onChange={this.handleInput('num')} value={num} onPressEnter={this.onPressEnter} autoFocus />\n                </Col>\n            </Row>\n\n            <Row gutter={24} align=\"middle\">\n                <Col span={8}>\n                    <h3>详情</h3>\n                </Col>\n                <Col span={16}>\n                    <Input ref={this.refDetails} onChange={this.handleInput('details')} value={details} onPressEnter={this.handleSubmit} />\n                </Col>\n            </Row>\n\n\n            <Row gutter={24} align=\"middle\" justify=\"center\" style={{ marginTop: '24px' }}>\n                <Button type=\"primary\" onClick={this.handleSubmit}>录入</Button>\n            </Row>\n\n            {/* <a style={{ position: 'absolute', bottom: '24px', left: '24px' }} href=\"https://github.com/zhangbo819/code_Resource/blob/master/README.md\">github 地址</a> */}\n\n        </div >\n    }\n}","import React from 'react'\n\nimport { Tabs } from 'antd-mobile'\n\nimport Bill from '../components/Bill'\nimport Entering from '../components/Entering'\n\nconst { TabPane } = Tabs;\n\nexport default class InputBill extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.refBill = React.createRef()\n  }\n\n  onChange = (activeKey) => {\n    // console.log(refBill)\n    if (activeKey === '2') {\n      this.refBill.current && this.refBill.current.update()\n    }\n  }\n\n  render() {\n    // const { date, details, num } = this.state\n    return <div style={this.props.style}>\n      <Tabs defaultActiveKey=\"1\" centered onChange={this.onChange}>\n        <TabPane title=\"录入\" key=\"1\">\n          <Entering storeKey={this.props.storeKey} />\n        </TabPane>\n        <TabPane title=\"账本\" key=\"2\">\n          <Bill storeKey={this.props.storeKey} ref={this.refBill} />\n        </TabPane>\n      </Tabs>\n    </div >\n  }\n}","import React, { useState } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { Badge, TabBar, Tabs } from 'antd-mobile'\n// import 'antd-mobile/dist/antd-mobile.css'; // TODO 按需加载\n\nimport {\n  AppOutline,\n  MessageOutline,\n  MessageFill,\n  UnorderedListOutline,\n  UserOutline,\n} from 'antd-mobile-icons'\n\nimport InputBill from './pages/InputBill'\n\nfunction App() {\n  const tabs = [\n    {\n      key: 'home',\n      title: '总体',\n      renderComp: () => <InputBill />,\n      icon: <AppOutline />,\n      // badge: Badge.dot,\n    },\n    {\n      key: 'home2',\n      title: '攒钱',\n      enderComp: () => <InputBill />,\n      icon: <AppOutline />,\n      // badge: Badge.dot,\n    },\n  ]\n\n  const [activeKey, setActiveKey] = useState('home')\n\n  return (\n    <div>\n\n      <InputBill storeKey=\"MBD\" style={{ display: activeKey == 'home' ? 'block' : 'none' }} />\n      <InputBill storeKey=\"ACD\" style={{ display: activeKey == 'home2' ? 'block' : 'none' }} />\n\n      <TabBar style={{ position: 'fixed', width: '100%', bottom: 0 }} activeKey={activeKey} onChange={setActiveKey}>\n        {tabs.map(item => (\n          <TabBar.Item key={item.key} icon={item.icon} title={item.title} />\n        ))}\n      </TabBar>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}